<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>WaWork</groupId>
	<artifactId>WaWork</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.</java.version>
		<spring.version>4.0.4.RELEASE</spring.version>
		<slf4j.version>1.7.7</slf4j.version>
		<jersey.version>2.8</jersey.version>
		<aspectj.version>1.8.0</aspectj.version>
		<hibernate.version>4.3.5.Final</hibernate.version>
		<jadira.version>3.2.0.GA</jadira.version>
		<spring.version>4.0.4.RELEASE</spring.version>
		<jackson.version>2.4.0-rc3</jackson.version>
		<springsecurity.version>3.2.3.RELEASE</springsecurity.version>
		<project.webapp.directory>${project.basedir}/src/main/web</project.webapp.directory>
		<project.build.webapp.directory>${project.build.directory}/generated-resources</project.build.webapp.directory>
	</properties>

	<build>

		<directory>target</directory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<outputDirectory>target/classes</outputDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<testOutputDirectory>target/test-classes</testOutputDirectory>

		<finalName>${project.artifactId}-${project.version}</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<!-- We need to add this so that m2e (maven2eclipse) will execute 
										the minify-maven-plugin's goal 'minify' when it builds the eclipse project -->
									<pluginExecutionFilter>
										<groupId>com.samaxes.maven</groupId>
										<artifactId>minify-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>minify</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>


			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.lesscss</groupId>
				<artifactId>lesscss-maven-plugin</artifactId>
				<version>1.7.0.1.0</version>
				<configuration>
					<sourceDirectory>${project.webapp.directory}/less</sourceDirectory>
					<outputDirectory>${project.webapp.directory}/css</outputDirectory>
					<compress>true</compress>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<excludedGroups>com.wtl.wawork.core.util.FunctionalTest</excludedGroups>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<webappDirectory>target/deploy</webappDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<warSourceExcludes>**/test/*</warSourceExcludes>
					<webResources>
						<resource>
							<directory>${project.webapp.directory}</directory>
							<includes>
								<include>**/*.html</include>
								<include>**/vendor/*.js</include>
							</includes>
							<targetPath>resources</targetPath>
						</resource>
						<resource>
							<directory>${project.build.webapp.directory}</directory>
							<targetPath>resources</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>1.3.1.5</version>
				<executions>
					<execution>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jsSrcDir>${project.webapp.directory}/js</jsSrcDir>
					<jsTestSrcDir>${project.webapp.directory}/js</jsTestSrcDir>
					<preloadSources>
						<source>vendor/jquery.js</source>
						<source>vendor/angular.js</source>
						<source>vendor/angular-mocks.js</source>
						<source>vendor/angular-route.js</source>
						<source>vendor/angular-resource.js</source>
						<source>vendor/moment.min.js</source>
					</preloadSources>
					<sourceExcludes>
						<exclude>**/*.spec.js</exclude>
					</sourceExcludes>
					<specIncludes>
						<include>**/*.spec.js</include>
					</specIncludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.samaxes.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<version>1.7.2</version>
				<executions>
					<execution>
						<goals>
							<goal>minify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<webappTargetDir>${project.build.webapp.directory}</webappTargetDir>
					<webappSourceDir>${project.webapp.directory}</webappSourceDir>
					<jsTargetDir>/js</jsTargetDir>
					<jsSourceDir>/js</jsSourceDir>
					<cssSourceDir>/css</cssSourceDir>
					<cssSourceIncludes>
						<cssSourceInclude>**/*.css</cssSourceInclude>
					</cssSourceIncludes>
					<jsSourceIncludes>
						<jsSourceInclude>**/*.js</jsSourceInclude>
					</jsSourceIncludes>
					<jsSourceExcludes>
						<jsSourceExclude>vendor/**</jsSourceExclude>
						<jsSourceExclude>**/*.spec.js</jsSourceExclude>
					</jsSourceExcludes>
					<jsEngine>CLOSURE</jsEngine>
					<jsFinalFile>wawork.js</jsFinalFile>
					<cssFinalFile>wawork.css</cssFinalFile>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<goals>
							<goal>install-file</goal>
						</goals>
						<phase>install</phase>
						<configuration>
							<file>${project.build.directory}/${project.build.finalName}.${project.packaging}</file>
							<generatePom>false</generatePom>
							<pomFile>pom.xml</pomFile>
							<version>${my.version}</version>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<locales>en</locales>
					<generateSitemap>false</generateSitemap>
					<generateProjectInfo>false</generateProjectInfo>
					<generatedSiteDirectory>false</generatedSiteDirectory>
				</configuration>

			</plugin>
		</plugins>
	</build>

	<reporting>
		<excludeDefaults>true</excludeDefaults>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.4</version>
				<configuration>
					<lineLength>140</lineLength>
					<excludeFilterFile>findbugs-exclusions.xml</excludeFilterFile>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.17</version>
			</plugin>
		</plugins>
	</reporting>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<version>2.3.3</version>
		</dependency>


		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${springsecurity.version}</version>
		</dependency>


		<!-- Utilities -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r09</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>net.karneim</groupId>
			<artifactId>pojobuilder</artifactId>
			<version>2.4.1</version>
		</dependency>


		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.5.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>0.9.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>



		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.0.Final</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- DB -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.2-1003-jdbc4</version>
		</dependency>

		<!-- Tomcat -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>7.0.53</version>
			<scope>provided</scope>
		</dependency>

		<!-- Joda -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.spi</artifactId>
			<version>${jadira.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jadira.usertype</groupId>
			<artifactId>usertype.core</artifactId>
			<version>${jadira.version}</version>
		</dependency>

		<!-- Java EE -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>
</project>